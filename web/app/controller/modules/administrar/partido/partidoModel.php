<?phprequire $_SERVER['DOCUMENT_ROOT'] . "app/model/db.php";class partidoModel {    private $result;    private $primaryTable;    function __construct($active) {        $active ? true : die('ACCESS DENIED');        $this->dbo = new db();        $this->primaryTable = "partido";    }    private $dbo;    public function consultar($P) {        if (isset($P['_conse']) && !is_numeric($P['_conse'])) {            $this->setResult('Error al consultar el registro', 'error');            return false;        }        $consulta = "";        $params = null;        if (isset($P['params'])) {            $params = json_decode($P['params']);        }        switch ($P['tipo']) {            case "activo":                $consulta = "select pt.id,                                     lg.nombre as liga,                                     eq1.nombre as equipo_local,                                     eq2.nombre as equipo_visita,                                    pt.fechaCompromiso,                                     pt.horaInicio,                                     pt.horaFinal "                        . "from $this->primaryTable pt "                        . "inner join liga lg on pt.liga_id=lg.id "                        . "inner join equipo eq1 on pt.equipo_local=eq1.id "                        . "inner join equipo eq2 on pt.equipo_visita=eq2.id "                        . "where pt.estado <> 'X' "                        . "order by lg.nombre,  pt.fechaCompromiso";                break;            case "formulario":                $consulta = "select * from $this->primaryTable where id=" . $P['_conse'];                break;            case "liga":                $consulta = "select id, nombre as html from liga where estado = 'A' order by nombre";                break;            case "equipo":                $params = json_decode($P['params']);                $consulta = "select eq.id, eq.nombre as html from equipo eq "                        . "inner join liga lg on eq.liga_id = lg.id "                        . "where eq.estado='A' and eq.liga_id=" . $params->liga_id;                break;            case "parametro":                $consulta = "select pt.id, pt.parametro_nombre, pt.valor_local, pt.marca_local, pt.valor_visita, pt.marca_visita                                from parametro_partido pt                                where pt.partido_id = " . $params->partido_id . "                                ";                break;        }        $this->dbo->conectar();        $res = $this->dbo->consultar($consulta);        $this->dbo->desconectar();        if ($this->dbo->getError() === null) {            $this->setResult($res, 'data');        } else {            $this->setResult("Ha ocurrido un error en la consulta", "error");            return false;        }        return true;    }    public function guardar($P) {        $consulta = "insert into $this->primaryTable(observacion                                            ,fechaRegistro                                            ,marcador                                            ,estadio                                            ,estado                                            ,equipo_local                                            ,equipo_visita                                            ,fechaCompromiso                                            ,horaInicio                                            ,horaFinal                                            ,liga_id                                            )                              values(       '" . $P["observacion"] . "',                                            '" . date('Y-m-d') . "' ,                                            '" . $P["marcador"] . "',                                            '" . $P["estadio"] . "',                                            '" . $P["estado"] . "',                                            " . $P["equipo_local"] . ",                                            " . $P["equipo_visita"] . ",                                            '" . $P["fechaCompromiso"] . "',                                            '" . $P["horaInicio"] . "',                                            '" . $P["horaFinal"] . "',                                            '" . $P["liga_id"] . "'                                            )										                                    ";        $this->dbo->conectar();        if (!$this->dbo->ejecutar($consulta)) {            $this->setResult('Error al guardar el registro.', 'error');        } else {            $insertedId = $this->dbo->getInsertedID();            $this->procesarCargarParametros($insertedId);            $this->setResult($insertedId, 'id');        }        $this->dbo->desconectar();        return true;    }    public function editar($P) {        if (!is_numeric($P['id'])) {            $this->setResult('Error al editar el registro', 'error');            return false;        }        $consulta = "update $this->primaryTable set                             estado = '" . $P['estado'] . "'            where id= " . $P['id'] . "                    ";        $this->dbo->conectar();        if (!$this->dbo->ejecutar($consulta)) {            $this->setResult('Error al editar el registro', 'error');        } else {            $this->setResult($this->dbo->getInsertedID(), 'ok');        }        $this->dbo->desconectar();        return true;    }    public function borrar($P) {        if (!is_numeric($P['id'])) {            $this->setResult('Error al borrar el registro', 'error');            return false;        }        $consulta = "update $this->primaryTable set estado = 'X'                                        where id= " . $P['id'] . "                    ";        $this->dbo->conectar();        if (!$this->dbo->ejecutar($consulta)) {            $this->setResult('Error al borrar el registro', 'error');        } else {            $this->setResult($this->dbo->getInsertedID(), 'ok');        }        $this->dbo->desconectar();    }    public function setResult($output, $type = "message") {        $this->result = [            "type" => $type,            "output" => $output        ];        return true;    }    public function getResult() {        return $this->result;    }    private function procesarCargarParametros($partido_id) {        $crearParametrosQuery = "insert into parametro_partido (fechaRegistro, partido_id, parametro_id, valor_local, valor_visita, parametro_nombre) "                . "select NOW(), $partido_id, id, 0, 0, nombre from parametro ";        $this->dbo->ejecutar($crearParametrosQuery);    }    public function actualizarParametrosPartido($P) {        $partido_id = $P['partido_id'];        $paramLocalData = json_decode($P['paramLocalData']);        $paramVisitaData = json_decode($P['paramVisitaData']);        $paramLocalMarcaData = json_decode($P['paramLocalMarcaData']);        $paramVisitaMarcaData = json_decode($P['paramVisitaMarcaData']);        $this->dbo->conectar();        foreach ($paramLocalData as $paramKey => $paramVal) {            $paramId = substr($paramKey, strpos($paramKey, "_") + 1);            $paramVal = (float) $paramVal;            $updateQuery = "update parametro_partido set valor_local = $paramVal where partido_id=$partido_id and id=$paramId;";            $this->dbo->ejecutar($updateQuery);        }        foreach ($paramVisitaData as $paramKey => $paramVal) {            $paramId = substr($paramKey, strpos($paramKey, "_") + 1);            $paramVal = (float) $paramVal;            $updateQuery = "update parametro_partido set valor_visita = $paramVal where partido_id=$partido_id and id=$paramId;";            $this->dbo->ejecutar($updateQuery);        }        foreach ($paramLocalMarcaData as $paramKey => $paramVal) {            $paramId = substr($paramKey, strpos($paramKey, "_") + 1);            $paramVal = strtoupper($paramVal);            $updateQuery = "update parametro_partido set marca_local = '$paramVal' where partido_id=$partido_id and id=$paramId;";            $this->dbo->ejecutar($updateQuery);        }        foreach ($paramVisitaMarcaData as $paramKey => $paramVal) {            $paramId = substr($paramKey, strpos($paramKey, "_") + 1);            $paramVal = strtoupper($paramVal);            $updateQuery = "update parametro_partido set marca_visita = '$paramVal' where partido_id=$partido_id and id=$paramId;";            $this->dbo->ejecutar($updateQuery);        }        $this->dbo->desconectar();        $this->setResult('Parametros guardados correctamente', 'ok');        return true;    }}